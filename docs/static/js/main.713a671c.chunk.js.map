{"version":3,"sources":["components/todoReducer.js","components/TodoItem.js","components/TodoList.js","components/AddForm.js","hooks/useForm.js","components/TodoApp.js","index.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done","TodoItem","index","handleToggleDone","handleDelete","className","desc","onClick","TodoList","todos","AddForm","handleAdd","initialState","useState","values","setValues","target","name","value","useForm","description","formValues","handleInputChange","resetForm","onSubmit","e","preventDefault","trim","length","newTodo","Date","getTime","placeholder","autoComplete","onChange","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.713a671c.chunk.js","sourcesContent":["\r\nexport const todoReducer = (state = [], action) => {\r\n    switch( action.type ) {\r\n        case 'add':\r\n            return [...state, action.payload];\r\n        \r\n        case 'delete':\r\n            return state.filter( todo => todo.id !== action.payload ); \r\n\r\n        case 'toggleDone':\r\n            return state.map( todo => ( todo.id === action.payload ) ? { ...todo, done: !todo.done } : todo );\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\n\r\nexport const TodoItem = ({todo, index, handleToggleDone, handleDelete}) => {\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <span id={`desc${todo.id}`} className={(todo.done === true)? `complete`: ``}>{ index + 1 }. {todo.desc}</span>\r\n            <span className=\"controls\">\r\n                <button className=\"btn btn-primary\" onClick={ ()=>{ handleToggleDone(todo.id) } }>Hecho</button>\r\n                <button className=\"btn btn-danger\" onClick={ ()=>{ handleDelete(todo.id) } }>Borrar</button>\r\n            </span>\r\n        </li>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoItem } from './TodoItem'\r\n\r\nexport const TodoList = ({todos, handleToggleDone, handleDelete}) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {\r\n                todos.map( (todo, index) => ( <TodoItem key={todo.id} todo = { todo } index = { index } handleDelete = { handleDelete } handleToggleDone = { handleToggleDone } /> ))      \r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useForm } from '../hooks/useForm';\r\n\r\nexport const AddForm = ( { handleAdd } ) => {\r\n\r\n    const [ formValues, handleInputChange, resetForm ] = useForm({description: ''});\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // If the description is empty\r\n        if (formValues.description.trim().length < 1){\r\n            return;\r\n        }\r\n\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: formValues.description,\r\n            done: false\r\n        };\r\n\r\n        handleAdd(newTodo);\r\n        resetForm();\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={ handleSubmit }>\r\n                <input type=\"text\" name=\"description\" placeholder=\"Nueva tarea ...\" autoComplete=\"off\" value={ formValues.description } onChange={ handleInputChange }/>\r\n                <button type=\"submit\" className=\"btn btn-success\">Agregar</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    const [values, setValues] = useState( initialState );\r\n\r\n    const resetForm = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChanges = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n    \r\n    return [ values, handleInputChanges, resetForm ];\r\n}\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { todoReducer } from './todoReducer';\r\nimport { TodoList } from './TodoList';\r\nimport { AddForm } from './AddForm';\r\nimport './styles.css';\r\n\r\nconst init = () => {\r\n    // return the todos in localStorage, if are null, return an empty array\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n};\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer(todoReducer, [], init);\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem('todos', JSON.stringify(todos) );\r\n    }, [todos]);\r\n\r\n    const handleAdd = ( newTodo ) => {\r\n        dispatch({\r\n            type: 'add',\r\n            payload: newTodo\r\n        });\r\n    };\r\n\r\n    const handleDelete = ( todoId ) => {\r\n        dispatch({\r\n            type: 'delete',\r\n            payload: todoId\r\n        });\r\n    };\r\n\r\n    const handleToggleDone = ( todoId ) => {\r\n        dispatch({\r\n            type: 'toggleDone',\r\n            payload: todoId\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>To-Do App  </h1>\r\n            <hr></hr>\r\n            <h4>Agregar tarea</h4>  \r\n            <AddForm handleAdd = { handleAdd } />\r\n            <h4>Tareas <small>({todos.length})</small></h4>\r\n            <TodoList todos = {todos} handleToggleDone = { handleToggleDone } handleDelete = { handleDelete } />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { TodoApp } from './components/TodoApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}